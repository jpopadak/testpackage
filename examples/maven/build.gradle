apply plugin:'maven'

description 'Maven example'

task buildExamples(type: Exec, dependsOn: [':modules:testpackage:install', ':modules:testpackage-maven-plugin:install']) {
    logging.captureStandardOutput(LogLevel.INFO)
    commandLine 'mvn', 'clean', 'package'
}

task checkExamples(type: Exec, dependsOn: buildExamples) {
    commandLine 'java', '-jar', 'target/maven-example-1.0-SNAPSHOT.jar'
    standardOutput = new ByteArrayOutputStream()
    ignoreExitValue = true


    doLast {
        assert execResult.exitValue == 1
        def stdout = standardOutput.toString()

        assert stdout.contains('>>  BasicTest.testDeliberateAssertionFailure')
        assert stdout.contains('[ 0/6 tests run ]')
        assert stdout.contains('✘  BasicTest.testDeliberateAssertionFailure')
        assert stdout.contains('>>  BasicTest.testDeliberateError')
        assert stdout.contains('[ 1/6 tests run')
        assert stdout.contains('[ 2/6 tests run')
        assert stdout.contains('✘  BasicTest.testDeliberateError')
        assert stdout.contains('>>  BasicTest.testEqualsAssertion')
        assert stdout.contains('2 failed ]')
        assert stdout.contains('✔  BasicTest.testEqualsAssertion')
        assert stdout.contains('STDOUT:\n' + '        ✘ Deliberate assertion failure')
        assert stdout.contains('4 passed, 2 failed, 0 ignored')
        assert stdout.contains('FAILED')

        def junitReportFile = new XmlSlurper().parse(new File(workingDir, 'target/TEST-org.testpackage.example.maven.BasicTest.xml'))
        assert junitReportFile.'system-out'.text().trim() == 'A message on stdout'
        assert junitReportFile.'system-err'.text().trim() == 'A message on stderr'
        assert junitReportFile.@errors == 1
        assert junitReportFile.@failures == 1
        assert junitReportFile.@tests == 6
        assert junitReportFile.testcase.grep{ it.@name=='testDeliberateError' }.error[0].@message == 'Something went wrong! Oh noes!'
        assert junitReportFile.testcase.grep{ it.@name=='testDeliberateAssertionFailure' }.failure[0].@message == "Deliberate assertion failure - it should be equal but is not: '99' does not equal expected '42'"
    }
}

task check(dependsOn: checkExamples) {

}